% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ROCsurf.R
\name{ROCsurf}
\alias{ROCsurf}
\alias{dG}
\alias{dW}
\alias{dL}
\alias{pG}
\alias{pW}
\alias{pL}
\alias{qG}
\alias{qW}
\alias{qL}
\alias{rG}
\alias{rW}
\alias{rL}
\alias{r.tc_vus}
\alias{r.tc_index}
\alias{r.tc_graph}
\title{ROC Surface Analysis Under the Three-class Problems}
\usage{
dG(x, alpha, beta)

dW(x, alpha, beta)

dL(z, alpha, beta)

pG(x, alpha, beta)

pW(y, alpha, beta)

pL(y, alpha, beta)

qG(p, alpha, beta)

qW(p, alpha, beta)

qL(p, alpha, beta)

rG(n, alpha, beta)

rW(n, alpha, beta)

rL(n, alpha, beta)

r.tc_vus(
  x,
  y,
  z,
  init_param = c(alpha1 = 1, beta1 = 1, alpha2 = 1, beta2 = 1, alpha3 = 1, beta3 = 1),
  true_param = c(alpha1 = 1, beta1 = 1, alpha2 = 1, beta2 = 1, alpha3 = 1, beta3 = 1),
  model = c("GWL", "GGW", "GLL", "WGW", "WWW", "GGG", "LLL"),
  method = c("MLE", "AD", "CvM", "LSE", "WLSE", "TRUE")
)

r.tc_index(
  x,
  y,
  z,
  init_param = c(alpha1 = 1, beta1 = 1, alpha2 = 1, beta2 = 1, alpha3 = 1, beta3 = 1),
  true_param = c(alpha1 = 1, beta1 = 1, alpha2 = 1, beta2 = 1, alpha3 = 1, beta3 = 1),
  init_index = c(median(x), median(y)),
  model = c("GWL", "GGW", "GLL", "WGW", "WWW", "GGG", "LLL"),
  method = c("MLE", "AD", "CvM", "LSE", "WLSE", "TRUE")
)

r.tc_graph(
  x,
  y,
  z,
  init_param = c(alpha1 = 1, beta1 = 1, alpha2 = 1, beta2 = 1, alpha3 = 1, beta3 = 1),
  true_param = c(alpha1 = 1, beta1 = 1, alpha2 = 1, beta2 = 1, alpha3 = 1, beta3 = 1),
  empirical = TRUE,
  model = c("GWL", "GGW", "GLL", "WGW", "WWW", "GGG", "LLL"),
  method = c("MLE", "AD", "CvM", "LSE", "WLSE", "TRUE")
)
}
\arguments{
\item{x, y, z}{vector of quantiles.}

\item{alpha}{shape parameter.}

\item{beta}{scale parameter.}

\item{p}{vector of probabilities.}

\item{n}{number of observations. If \code{length(n) > 1}, the length is taken
to be the number required.}

\item{init_param}{initial paremeter values for the estimation method.}

\item{true_param}{true parameter values.}

\item{model}{selected model. The default value for the model is "GWL".}

\item{method}{estimation method. The default value for the method is "MLE".}

\item{init_index}{initial index value for the optimization calculation.}

\item{empirical}{empirical must be TRUE or FALSE.}

\item{alpha1}{shape parameter of distribution of first sample.}

\item{beta1}{scale parameter of distribution of first sample.}

\item{alpha2}{shape parameter of distribution of second sample.}

\item{beta2}{scale parameter of distribution of second sample.}

\item{alpha3}{location parameter of distribution of third sample.}

\item{beta3}{scale parameter of distribution of third sample.}
}
\value{
\code{dG} gives the probability density function of Gamma
Distribution.

\code{dW} gives the probability density function of Weibull
Distribution.

\code{dL} gives the probability density function of Logistic
Distribution.

\code{pG} gives the cumulative density function of
Gamma Distribution.

\code{pW} gives the cumulative density function of
Weibull Distribution.

\code{pL} gives the cumulative density function of
Logistic Distribution.

\code{qG} gives the quantile function of
Gamma Distribution.

\code{qW} gives the quantile function of
Weibull Distribution.

\code{qL} gives the quantile function of
Logistic Distribution.

\code{rG} gives random numbers from Gamma Distribution.

\code{rW} gives random numbers from Weibull Distribution.

\code{rL} gives random numbers from Logistic Distribution.

\code{r.tc_vus} gives the Volume Under the Surface (VUS) when the
data conforms to the proposed three distributions.

\code{r.tc_index} gives index values when the
data conforms to the proposed three distributions.

\code{r.tc_graph} gives the ROC curve when the data conforms to the
proposed three distributions.
}
\description{
ROC surface analysis is performed under the three-class
classification problems. The volume under the ROC surface and true positive
fractions values are evaulated by ROC surface analysis.
}
\details{
dsadasd
}
\examples{
dG(c(1,2,3,4,5,200,1000),alpha=6,beta=.8)
dW(c(1,2,3,4,5,200,10000),alpha=1,beta=2)
dL(c(1,2,3,4,5,200),alpha=1,beta=.1)
pG(c(.5,1,2,3,4,25),alpha=6,beta=.8)
pW(c(.5,1,2,3,4,100),alpha=1,beta=2)
pL(c(.5,1,2),alpha=1,beta=.1)
qG(c(.9971,0.5,0.3),alpha=6,beta=.8)
qW(c(.9971,0.5,0.3),alpha=1,beta=2)
qL(c(.9971,0.5,0.3),alpha=1,beta=.1)
rG(10,alpha=6,beta=.8)
rW(10,alpha=1,beta=2)
rL(10,alpha=1,beta=.1)
r.tc_vus(x=c(0.7736414, 1.0131692, 0.8667612, 1.0066519, 1.0372385),
y=c(1.5200108, 0.0617668, 6.0647578, 0.7594201, 0.3714640),
z=c(3.485613, 4.939489, 6.072339, 3.995163, 2.893617),
true_param=c(alpha1=1,beta1=1,alpha2=1,beta2=1,alpha3=1,beta3=1),
model=c("GWL"),method=c("TRUE"))
r.tc_index(x=c(0.7736414, 1.0131692, 0.8667612, 1.0066519, 1.0372385),
y=c(1.5200108, 0.0617668, 6.0647578, 0.7594201, 0.3714640),
z=c(3.485613, 4.939489, 6.072339, 3.995163, 2.893617),
true_param=c(alpha1=1,beta1=1,alpha2=1,beta2=1,alpha3=1,beta3=1),
init_index=c(median(x),median(y)),
model=c("GWL"),method=c("TRUE"))
\donttest{x=c(0.7736414, 1.0131692, 0.8667612, 1.0066519, 1.0372385)}
\donttest{y=c(1.5200108, 0.0617668, 6.0647578, 0.7594201, 0.3714640)}
\donttest{z=c(3.485613, 4.939489, 6.072339, 3.995163, 2.893617)}
\donttest{r.tc_graph(x,y,z,init_param=c(1,1,1,1,1,1),
empirical=TRUE,model=c("GWL"),method=c("MLE"))}
}
\references{
asdasda
}
